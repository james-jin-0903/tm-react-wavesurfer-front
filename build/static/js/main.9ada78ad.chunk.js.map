{"version":3,"sources":["assets/logo.png","components/SessionRow.js","components/NavBar.js","components/SessionList.js","containers/SessionListContainer.js","components/LinearProgressWithLabel.js","actions/index.js","components/AudioWave.js","components/TrackRow.js","components/TrackList.js","components/GlobalMetaDataSection.js","components/SessionDetail.js","components/Session.js","containers/SessionContainer.js","App.js","shared/enums.js","reducers/index.js","sagas/selectors.js","shared/endpoints.js","sagas/index.js","serviceWorker.js","index.js"],"names":["module","exports","SessionRow","sessionKey","start_time","name","artist","venue","promoter_name","length","outputs","history","useHistory","classes","makeStyles","row","cursor","useStyles","TableRow","hover","className","onClick","push","handleClick","TableCell","Date","toUTCString","match","replace","NavBar","props","session","AppBar","Toolbar","Grid","container","direction","justify","alignItems","to","src","require","alt","style","width","Typography","variant","SessionList","sessions","theme","paperClass","marginTop","marginBottom","padding","mt7","Paper","TableContainer","component","Table","TableHead","TableBody","map","index","key","SessionListContainer","connect","state","LinearProgressWithLabel","Box","display","mr","LinearProgress","minWidth","color","Math","round","value","deleteTrack","segment","type","editTrack","initialState","mouseX","mouseY","AudioWave","sessionAudioURL","tracks","useState","loadingProgress","setLoadingProgress","waveSurfer","setWaveSurfer","audioReady","setAudioReady","contextState","setContextState","contextMenuSegment","setContextMenuSegment","playButton","useRef","forOutFocusRegion","pauseButton","dispatch","useDispatch","useEffect","clearRegions","forEach","track","region","id","start","end","resize","drag","regionColor","addRegion","un","on","loadedProgress","a","enableDragSelection","e","stopPropagation","play","offsetX","position","getDuration","current","click","isNaN","newRegion","duration","data","updatedRegion","find","WaveSurfer","create","height","scrollParent","normalize","minimap","minPxPerSec","plugins","RegionsPlugin","MinimapPlugin","waveColor","progressColor","cursorColor","TimelinePlugin","load","window","addEventListener","keyCode","playPause","timelineContainer","rmButton","waveformContainer","waveformTimelineContainer","contextMenuTitle","textAlign","Fragment","elevation","onContextMenu","event","preventDefault","target","Number","getAttribute","clientX","clientY","Menu","keepMounted","open","onClose","anchorReference","transitionDuration","anchorPosition","top","left","undefined","MenuItem","lockStatus","activeSegment","openCollapseTrack","selectedTrack","previousTrackSegment","perviousTrack","nextTrackSegment","nextTrack","ref","Button","data-action","secondsToHours","secs","TrackRow","editing","metaTagArtist","selectTrack","metaTagTrack","metaTagLabel","metaTagISRC","metaTagRegion","metaTagReleaseDate","metaTagAdditionalInfo","collapse","useSelector","selectedSessionTracks","initEditing","initStart","setInitStart","initEnd","setInitEnd","initDuration","setInitDuration","collapseOpen","setCollapseOpen","metaArtist","setMetaArtist","metaTrack","setMetaTrack","metaLabel","setMetaLabel","metaISRC","setMetaISRC","metaRegion","setMetaRegion","metaReleaseDate","setMetaReleaseDate","metaAdditionalInfo","setMetaAdditionalInfo","handleLockClick","Input","onChange","size","ButtonGroup","orientation","aria-label","editedTrack","saveMetaData","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","margin","TextField","label","TrackList","TabPanel","children","other","role","hidden","aria-labelledby","p","root","flexGrow","backgroundColor","palette","background","paper","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","itemList","text","GlobalMetaDataSection","setValue","globalMetadataType","setGlobalMetadataType","globalMetadata","setGlobalMetadata","Tabs","newValue","Tab","Select","displayEmpty","input","inputProps","disabled","item","fontWeight","payload","SessionDetail","sessoinDetail","setSessionDetail","temp","Object","keys","Session","selectSession","tabValue","setTabValue","useParams","tabContainer","a11yProps","selectedSession","selectedSessionAudioURL","App","Container","Row","Col","xs","exact","path","SessionContainer","Status","Enumify","PROCESSING","ANALYSED","IN_PROGRESS","COMPLETE","_","closeEnum","selectedSessionStatus","alpha","random","getSessions","getSelectedSession","getSelectedSessionStatus","getSessionsURL","status","fetchSessions","fetchSessionAudioURL","rootSaga","select","endpoint","enumKey","call","fetch","response","json","put","action","s3_object","objectKey","encodeURIComponent","url","takeLatest","Boolean","location","hostname","sagaMiddleware","createSagaMiddleware","store","createStore","s","assign","i","arr","thisStart","thisEnd","sortedSessionsDesc","sort","s1","s2","process_start_time","t","createdTrack","audio_file","tempList","b","deleteResult","filter","applyMiddleware","run","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iMAAAA,EAAOC,QAAU,IAA0B,kC,sPCgE5BC,EAnDI,SAAC,GASb,IARUC,EAQX,EARJ,eACAC,EAOI,EAPJA,WACAC,EAMI,EANJA,KACAC,EAKI,EALJA,OACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,OACAC,EACI,EADJA,QAEIC,EAAUC,cAORC,EALYC,YAAW,CAC3BC,IAAK,CACHC,OAAQ,YAGIC,GAMhB,OACE,kBAACC,EAAA,EAAD,CACEC,OAAK,EACLC,UAAWP,EAAQE,IACnBM,QAAS,kBARO,SAAClB,GACnBQ,EAAQW,KAAR,mBAAyBnB,IAORoB,CAAYpB,KAE3B,kBAACqB,EAAA,EAAD,KAAYpB,GACZ,kBAACoB,EAAA,EAAD,KAAYnB,GACZ,kBAACmB,EAAA,EAAD,KAAYlB,GACZ,kBAACkB,EAAA,EAAD,KAAYjB,GACZ,kBAACiB,EAAA,EAAD,KAAYhB,GACZ,kBAACgB,EAAA,EAAD,KAxCG,IAAIC,KAAY,IAwCQhB,GAvC5BiB,cACAC,MAAM,oBAAoB,GAC1BC,QAAQ,KAAM,KAsCb,kBAACJ,EAAA,EAAD,MAAad,GAAW,IAAID,U,oCCzCnB,SAASoB,EAAOC,GAC7B,IAAMC,EAAUD,EAAMC,QACtB,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAQ,gBACRC,WAAW,UAEX,kBAAC,IAAD,CAAMC,GAAG,KACP,yBACEC,IAAKC,EAAQ,KACbC,IAAI,OACJC,MAAO,CAAEC,MAAO,WAGpB,6BACGb,GACC,kBAACc,EAAA,EAAD,CAAYC,QAAQ,MACjBf,EAAUA,EAAQzB,OAAS,SAC3B,MAFH,IAEWyB,EAAUA,EAAQ1B,KAAO,OACjC,MACA0B,EAAUA,EAAQxB,MAAQ,aCjB3C,IA2CewC,EA3CK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAWfnC,EAVYC,aAAW,SAAAmC,GAAK,MAAK,CACrCC,WAAY,CACVC,UAAW,OACXC,aAAc,OACdC,QAAS,QAEXC,IAAK,CACHH,UAAW,WAGClC,GAEhB,OACE,kBAAC,IAAD,CAAWG,UAAWP,EAAQyC,KAC5B,kBAACzB,EAAD,MACA,kBAAC0B,EAAA,EAAD,CAAOnC,UAAWP,EAAQqC,YACxB,yCAEF,kBAACM,EAAA,EAAD,CAAgBC,UAAWF,KACzB,kBAACG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACzC,EAAA,EAAD,KACE,kBAACM,EAAA,EAAD,mBACA,kBAACA,EAAA,EAAD,aACA,kBAACA,EAAA,EAAD,eACA,kBAACA,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,iBACA,kBAACA,EAAA,EAAD,eACA,kBAACA,EAAA,EAAD,sBAGJ,kBAACoC,EAAA,EAAD,KACGZ,EAASa,KAAI,SAAC9B,EAAS+B,GAAV,OACZ,kBAAC,EAAD,eAAYC,IAAKD,GAAW/B,YCrC3BiC,EAFcC,aANL,SAACC,GACvB,MAAO,CACLlB,SAAUkB,EAAMlB,YAISiB,CAAyBlB,G,4ECFvC,SAASoB,EAAwBrC,GAC9C,OACE,kBAACsC,EAAA,EAAD,CAAKC,QAAQ,OAAO/B,WAAW,UAC7B,kBAAC8B,EAAA,EAAD,CAAKxB,MAAM,OAAO0B,GAAI,GACpB,kBAACC,EAAA,EAAD,eAAgBzB,QAAQ,eAAkBhB,KAE5C,kBAACsC,EAAA,EAAD,CAAKI,SAAU,IACb,kBAAC3B,EAAA,EAAD,CAAYC,QAAQ,QAAQ2B,MAAM,iBAAlC,UAAsDC,KAAKC,MACzD7C,EAAM8C,OADR,Q,oHCyBD,SAASC,GAAYC,GAC1B,MAAO,CACLC,KAjCwB,eAkCxBD,WAIG,SAASE,GAAUF,GACxB,MAAO,CACLC,KA1CsB,aA2CtBD,WCjCJ,IAAMG,GAAe,CACnBC,OAAQ,KACRC,OAAQ,MA+WKC,GA1WG,SAAC,GAA0C,IAAxCrD,EAAuC,EAAvCA,QAASsD,EAA8B,EAA9BA,gBAAiBC,EAAa,EAAbA,OAAa,EACZC,mBAAS,GADG,mBACnDC,EADmD,KAClCC,EADkC,OAEtBF,mBAAS,MAFa,mBAEnDG,EAFmD,KAEvCC,EAFuC,OAGtBJ,oBAAS,GAHa,mBAGnDK,EAHmD,KAGvCC,EAHuC,OAIlBN,mBAASN,IAJS,mBAInDa,EAJmD,KAIrCC,EAJqC,OAKNR,mBAAS,MALH,mBAKnDS,EALmD,KAK/BC,EAL+B,KAMpDC,EAAaC,iBAAO,MACpBC,EAAoBD,iBAAO,MAC3BE,EAAcF,iBAAO,MAErBG,EAAWC,cA+IjBC,qBAAU,WAkBJZ,GAhBG7D,IACL2D,EAAWe,eAEXnB,EAAOoB,SAAQ,SAACC,EAAO7C,GACrB,IAAI8C,EAAS,CACXC,GAAIF,EAAM7B,QACVgC,MAAOH,EAAMG,MACbC,IAAKJ,EAAMI,IACXC,OAAQL,EAAMK,OACdC,KAAMN,EAAMM,KACZxC,MAAOkC,EAAMO,aAEfxB,EAAWyB,UAAUP,SAOxB,CAACtB,EAAQM,EAAY7D,EAAS2D,IAEjCc,qBAAU,WACHd,IACLA,EAAW0B,GAAG,gBACd1B,EAAW0B,GAAG,mBACd1B,EAAW0B,GAAG,qBACd1B,EAAW0B,GAAG,qBACd1B,EAAW0B,GAAG,QAEd1B,EAAW2B,GAAG,UAAd,uCAAyB,WAAMC,GAAN,SAAAC,EAAA,sDACvB9B,EAAmB6B,GADI,2CAAzB,uDAIA5B,EAAW2B,GAAG,SAAS,WACrB3B,EAAW8B,oBAAoB,CAC7B/C,MAAO,0BAEToB,GAAc,MAGhBH,EAAW2B,GAAG,gBAAgB,SAACT,EAAQa,GACrCA,EAAEC,kBACFhC,EAAWiC,KAAKf,EAAOE,MAAQW,EAAEG,QAvMnB,MA0MhBlC,EAAW2B,GAAG,QAAQ,SAAAQ,GACpBnC,EAAWiC,KAAKE,EAAWnC,EAAWoC,kBAGxCpC,EAAW2B,GAAG,mBAAmB,SAACT,EAAQa,GACxCA,EAAEC,kBACF,IAAIZ,EAAQF,EAAOE,MAAQ,EAAI,EAAI,EAAIF,EAAOE,MAAQ,EACtDpB,EAAWiC,KAAKb,EAAOF,EAAOG,QAGhCrB,EAAW2B,GAAG,qBAAqB,SAACT,EAAQa,GAC1CrB,EAAkB2B,QAAQC,WAG5BtC,EAAW2B,GAAG,QAAQ,WACpBnB,EAAW6B,QAAQpF,MAAM0B,QAAU,OACnCgC,EAAY0B,QAAQpF,MAAM0B,QAAU,MAGtCqB,EAAW2B,GAAG,qBAAqB,SAAAT,GACjC,GAAIqB,MAAMrB,EAAOC,IAAjB,CACE,IAAIqB,EAAY,CACdpB,MAAOpC,KAAKC,MAAMiC,EAAOE,OACzBC,IAAKrC,KAAKC,MAAMiC,EAAOG,KACvBoB,SAAUzD,KAAKC,MAAMiC,EAAOG,KAAOrC,KAAKC,MAAMiC,EAAOE,QAEvDR,EDxNC,CACLvB,KA3BwB,eA4BxBqD,KCsNyBF,QANvB,CAUA5C,EAAOoB,SAAQ,SAAAC,GACTA,EAAM7B,UAAY8B,EAAOC,KAC3BF,EAAMG,MAAQpC,KAAKC,MAAMiC,EAAOE,OAChCH,EAAMI,IAAMrC,KAAKC,MAAMiC,EAAOG,KAC9BJ,EAAMwB,SAAWzD,KAAKC,MAAMiC,EAAOG,KAAOrC,KAAKC,MAAMiC,EAAOE,WAGhE,IAAIuB,EAAgB/C,EAAOgD,MAAK,SAAAvH,GAAG,OAAIA,EAAI+D,UAAY8B,EAAOC,MAC9DP,EAAStB,GAAUqD,QAGrB3C,EAAW2B,GAAG,SAAS,WACrBnB,EAAW6B,QAAQpF,MAAM0B,QAAU,GACnCgC,EAAY0B,QAAQpF,MAAM0B,QAAU,aAErC,CAACqB,EAAYJ,IAEhBkB,qBAAU,WACHd,GAvODA,GAEJC,EACE4C,IAAWC,OAAO,CAChBrG,UAAW,YACXsG,OAAQ,IACRC,cAAc,EACdC,WAAW,EACXC,SAAS,EACTC,YA5BY,EA6BZC,QAAS,CACPC,IAAcP,SACdQ,IAAcR,OAAO,CACnBC,OAAQ,GACRQ,UAAW,OACXC,cAAe,OACfC,YAAa,SAEfC,IAAeZ,OAAO,CACpBrG,UAAW,4BAuNlB,IAEHqE,qBAAU,WACJd,GAAcL,IAChBK,EAAW2D,KAAKhE,GAChBiE,OAAOC,iBAAiB,SAAS,SAAA9B,GACb,KAAdA,EAAE+B,SAAkB9D,GACtBA,EAAW+D,kBAIhB,CAAC/D,EAAYL,IAEhB,IAmBMxE,EAnBYC,aAAW,SAAAmC,GAAK,MAAK,CACrCyG,kBAAmB,CACjBrG,QAAS,QAEXsG,SAAU,CACRxG,UAAW,OACXP,MAAO,SAETgH,kBAAmB,CACjBnB,OAAQ,SAEVoB,0BAA2B,CACzBpB,OAAQ,OACRZ,SAAU,YAEZiC,iBAAkB,CAChBC,UAAW,aAGC9I,GAEhB,OACE,kBAAC,IAAM+I,SAAP,KACE,kBAACzG,EAAA,EAAD,CAAOnC,UAAWP,EAAQ6I,kBAAmBO,UAAW,GACtD,yBACE7I,UAAS,mBAAcP,EAAQ+I,mBAC/BM,cAvPY,SAAAC,GAClBA,EAAMC,iBACF,sBAAwBD,EAAME,OAAOjJ,YACvC6E,EAAsBqE,OAAOH,EAAME,OAAOE,aAAa,aACvDxE,EAAgB,CACdb,OAAQiF,EAAMK,QAAU,EACxBrF,OAAQgF,EAAMM,QAAU,MAkPtB9H,MAAO,CAAE3B,OAAQ,kBAEnB,yBACEI,UAAS,2BAAsBP,EAAQgJ,8BAG3C,kBAACa,EAAA,EAAD,CACEC,aAAW,EACXC,KAA8B,OAAxB9E,EAAaX,OACnB0F,QAtPc,WAClB9E,EAAgBd,KAsPZ6F,gBAAgB,iBAChBC,mBAAoB,EACpBC,eAC0B,OAAxBlF,EAAaX,QAA2C,OAAxBW,EAAaZ,OACzC,CAAE+F,IAAKnF,EAAaX,OAAQ+F,KAAMpF,EAAaZ,aAC/CiG,GAGN,wBAAI/J,UAAWP,EAAQiJ,kBAAvB,aACa9D,GAEb,kBAACoF,EAAA,EAAD,CAAU/J,QA9PO,WACrB,GAAIiE,EAAQ,CACV,IAAI+F,GAAa,EACjB/F,EAAOzB,KAAI,SAAA9C,GACLA,EAAI+D,UAAYkB,IAClBqF,EAAatK,EAAIkG,SAGrB3B,EAAOoB,SAAQ,SAAAC,GACTA,EAAM7B,UAAYkB,IACfqF,GAIH1E,EAAMK,QAAS,EACfL,EAAMM,MAAO,IAJbN,EAAMK,QAAS,EACfL,EAAMM,MAAO,OAOnB,IAAIqE,EAAgBhG,EAAOgD,MACzB,SAAAvH,GAAG,OAAIA,EAAI+D,UAAYkB,KAErBsF,GACFhF,EAAStB,GAAUsG,IAErBvF,EAAgBd,MAqOqBlB,IAAI,eAAvC,eAGA,kBAACqH,EAAA,EAAD,CAAU/J,QApOS,WACnB2E,GACFM,EAASzB,GAAYmB,IAEvBD,EAAgBd,KAgOyBlB,IAAI,UAAzC,UAGA,kBAACqH,EAAA,EAAD,CAAU/J,QAhOO,WACrB0E,EAAgBd,IAChBK,EAAOoB,SAAQ,SAAAC,GACTA,EAAM7B,UAAYkB,IACpBW,EAAK,UAAe,MAGxB,IAAI4E,EAAoBjG,EAAOgD,MAC7B,SAAAvH,GAAG,OAAIA,EAAI+D,UAAYkB,KAErBuF,GACFjF,EAAStB,GAAUuG,KAqNkBxH,IAAI,iBAAvC,iBAGCiC,EAAqB,GACpB,kBAACoF,EAAA,EAAD,CAAU/J,QArNU,WAE1B,GADA0E,EAAgBd,IACZe,EAAqB,EAAG,CAC1B,IAAIwF,EAAgBlG,EAAOgD,MACzB,SAAAvH,GAAG,OAAIA,EAAI+D,UAAYkB,KAErByF,EAAuBzF,EAAqB,EAC5C0F,EAAgBpG,EAAOgD,MACzB,SAAAvH,GAAG,OAAIA,EAAI+D,UAAY2G,KAGzBD,EAAc1E,MAAQ4E,EAAc5E,MACpC0E,EAAczE,IACZ2E,EAAc3E,IAAMyE,EAAczE,IAC9B2E,EAAc3E,IACdyE,EAAczE,IACpByE,EAAcrD,SACZzD,KAAKC,MAAM6G,EAAczE,KAAOrC,KAAKC,MAAM6G,EAAc1E,OAE3DR,EAAStB,GAAUwG,IACnBlF,EAASzB,GAAY4G,MAiMuB1H,IAAI,uBAA5C,uBAIDiC,EAAqBV,EAAO7E,QAC3B,kBAAC2K,EAAA,EAAD,CAAU/J,QAlMU,WAE1B,GADA0E,EAAgBd,IACZe,EAAqBV,EAAO7E,OAAQ,CACtC,IAAI+K,EAAgBlG,EAAOgD,MACzB,SAAAvH,GAAG,OAAIA,EAAI+D,UAAYkB,KAErB2F,EAAmB3F,EAAqB,EACxC4F,EAAYtG,EAAOgD,MAAK,SAAAvH,GAAG,OAAIA,EAAI+D,UAAY6G,KAEnDH,EAAc1E,MAAQ0E,EAAc1E,MACpC0E,EAAczE,IACZ6E,EAAU7E,IAAMyE,EAAczE,IAAM6E,EAAU7E,IAAMyE,EAAczE,IACpEyE,EAAcrD,SACZzD,KAAKC,MAAM6G,EAAczE,KAAOrC,KAAKC,MAAM6G,EAAc1E,OAE3DR,EAAStB,GAAUwG,IACnBlF,EAASzB,GAAY8G,MAkLuB5H,IAAI,mBAA5C,oBAKHyB,GAAmBA,EAAkB,GAAKA,EAAkB,IAC3D,kBAACrB,EAAD,CAAyBS,MAAOY,IAC9B,KACJ,yBAAKpE,UAAU,WAAWyK,IAAKzF,GAC7B,kBAAC0F,EAAA,EAAD,CACEhJ,QAAQ,YACR1B,UAAWP,EAAQ8I,SACnBtI,QAvUU,WACZqE,GAAYA,EAAW+D,aAuUrBsC,cAAY,QAEZ,0BAAMlF,GAAG,OAAOzF,UAAU,aAAayK,IAAK3F,GAC1C,kBAAC,IAAD,CAAevD,MAAO,CAAE8B,MAAO,WADjC,YAKA,0BACEoH,IAAKxF,EACLQ,GAAG,QACHzF,UAAU,cACVuB,MAAO,CAAE0B,QAAS,SAElB,kBAAC,IAAD,CAAW1B,MAAO,CAAE8B,MAAO,WAN7B,iB,6GClWJuH,GAAiB,SAAAC,GACrB,OAAO,IAAIxK,KAAY,IAAPwK,GACbvK,cACAC,MAAM,oBAAoB,GAC1BC,QAAQ,KAAM,KA0QJsK,GAvQE,SAAC,GAgBX,IAfLpF,EAeI,EAfJA,MACAC,EAcI,EAdJA,IACAjC,EAaI,EAbJA,QACAqD,EAYI,EAZJA,SACAlB,EAWI,EAXJA,KACAkF,EAUI,EAVJA,QAEAC,GAQI,EATJC,YASI,EARJD,eACAE,EAOI,EAPJA,aACAC,EAMI,EANJA,aACAC,EAKI,EALJA,YACAC,EAII,EAJJA,cACAC,EAGI,EAHJA,mBACAC,EAEI,EAFJA,sBACAC,EACI,EADJA,SAEMtG,EAAWC,cACXjB,EAASuH,aAAY,SAAA3I,GAAK,OAAIA,EAAM4I,yBAFtC,EAGoCvH,mBAAS4G,GAH7C,mBAGGY,EAHH,aAIgCxH,mBAAS0B,IAJzC,mBAIGoE,EAJH,aAK8B9F,mBAASuB,IALvC,mBAKGkG,EALH,KAKcC,EALd,OAM0B1H,mBAASwB,GANnC,mBAMGmG,EANH,KAMYC,EANZ,OAOoC5H,mBAAS4C,GAP7C,mBAOGiF,EAPH,KAOiBC,EAPjB,OAQoC9H,mBAASqH,GAR7C,mBAQGU,EARH,KAQiBC,EARjB,OAUgChI,mBAAS6G,GAVzC,mBAUGoB,EAVH,KAUeC,EAVf,OAW8BlI,mBAAS+G,GAXvC,mBAWGoB,EAXH,KAWcC,GAXd,QAY8BpI,mBAASgH,GAZvC,qBAYGqB,GAZH,MAYcC,GAZd,SAa4BtI,mBAASiH,GAbrC,qBAaGsB,GAbH,MAaaC,GAbb,SAcgCxI,mBAASkH,GAdzC,qBAcGuB,GAdH,MAceC,GAdf,SAe0C1I,mBAASmH,GAfnD,qBAeGwB,GAfH,MAeoBC,GAfpB,SAgBgD5I,mBAClDoH,GAjBE,qBAgBGyB,GAhBH,MAgBuBC,GAhBvB,MAwBEC,GAAkB,WACtBhJ,EAAOoB,SAAQ,SAAAC,GACTA,EAAM7B,UAAYA,IACfuG,GAIH1E,EAAMK,QAAS,EACfL,EAAMM,MAAO,IAJbN,EAAMK,QAAS,EACfL,EAAMM,MAAO,OAOnB,IAAIqE,EAAgBhG,EAAOgD,MAAK,SAAAvH,GAAG,OAAIA,EAAI+D,UAAYA,KACnDwG,GACFhF,EAAStB,GAAUsG,KAuEvB,OACE,kBAAC,IAAMtB,SAAP,KACE,kBAAC9I,EAAA,EAAD,CAAUC,OAAK,GACb,kBAACK,EAAA,EAAD,KAAYsD,IACViI,GACA,oCACE,kBAACvL,EAAA,EAAD,KAAYwK,GAAelF,IAC3B,kBAACtF,EAAA,EAAD,KAAYwK,GAAejF,KAG9BgG,GACC,oCACE,kBAACvL,EAAA,EAAD,KACE,kBAAC+M,GAAA,EAAD,CACE1H,GAAG,iBACH2H,SAlFY,SAAA/G,GACxBwF,EAAavI,KAAKC,MAAM8C,EAAE4C,OAAOzF,QACjCyI,EAAgB3I,KAAKC,MAAMuI,GAAWxI,KAAKC,MAAMqI,KAiFrCpI,MAAOoI,EACPjI,KAAK,YAGT,kBAACvD,EAAA,EAAD,KACE,kBAAC+M,GAAA,EAAD,CACE1H,GAAG,iBACH2H,SArFU,SAAA/G,GACtB0F,EAAWzI,KAAKC,MAAM8C,EAAE4C,OAAOzF,QAC/ByI,EAAgB3I,KAAKC,MAAMuI,GAAWxI,KAAKC,MAAMqI,KAoFrCpI,MAAOsI,EACPnI,KAAK,aAMb,kBAACvD,EAAA,EAAD,KAAYgM,GACZ,kBAAChM,EAAA,EAAD,KAAYkM,GACZ,kBAAClM,EAAA,EAAD,KAAYwK,GAAeoB,IAC3B,kBAAC5L,EAAA,EAAD,KACE,yBAAKJ,UAAU,aACXiK,EASA,kBAACS,EAAA,EAAD,CACEhJ,QAAQ,YACR2L,KAAK,QACLpN,QAASiN,IAHX,QARA,kBAACxC,EAAA,EAAD,CACEhJ,QAAQ,YACR2L,KAAK,QACLpN,QAASiN,IAHX,UAgBF,kBAACxC,EAAA,EAAD,CACEhJ,QAAQ,YACR2L,KAAK,QACLhK,MAAM,YACNpD,QAlJc,WACxBiF,EAASzB,GAAYC,MA6Ib,UAQA,kBAAC4J,GAAA,EAAD,cACEC,YAAY,WACZlK,MAAM,UACNmK,aAAW,0CACXjM,MAAO,CAAE8F,OAAQ,QACjB3F,QAAQ,aALV,QAMQ,WAEN,kBAACgJ,EAAA,EAAD,CACEnJ,MAAO,CAAE8F,OAAQ,QACjBpH,QAAS,YAhIF,WACnB,IAAqB,IAAjBiM,EAAuB,CACzBhI,EAAOoB,SAAQ,SAAAC,GACTA,EAAM7B,UAAYA,IACpB6B,EAAK,cAAoB6G,EACzB7G,EAAK,aAAmB+G,EACxB/G,EAAK,aAAmBiH,GACxBjH,EAAK,YAAkBmH,GACvBnH,EAAK,mBAAyBuH,GAC9BvH,EAAK,sBAA4ByH,GACjCzH,EAAK,cAAoBqH,GACzBrH,EAAK,UAAe,MAGxB,IAAIkI,EAAcvJ,EAAOgD,MAAK,SAAAvH,GAAG,OAAIA,EAAI+D,UAAYA,KACjD+J,GACFvI,EAAStB,GAAU6J,IAErBtB,GAAgB,IA+GJuB,KAGF,kBAAC,KAAD,CAAgBnM,MAAO,CAAE8F,OAAQ,WAEnC,kBAACqD,EAAA,EAAD,CAAQnJ,MAAO,CAAE8F,OAAQ,QAAUpH,QAhH1B,WACnBkM,GAAgB,GAChBjI,EAAOoB,SAAQ,SAAAC,GACTA,EAAM7B,UAAYA,IACpB6B,EAAK,UAAe,MAGxB,IAAI4E,EAAoBjG,EAAOgD,MAAK,SAAAvH,GAAG,OAAIA,EAAI+D,UAAYA,KACvDyG,GACFjF,EAAStB,GAAUuG,MAwGT,kBAAC,KAAD,CAAgB5I,MAAO,CAAE8F,OAAQ,eAM3C,kBAACvH,EAAA,EAAD,KACE,kBAACM,EAAA,EAAD,CAAWmB,MAAO,CAAEoM,cAAe,EAAGC,WAAY,GAAKC,QAAS,GAC9D,kBAACC,GAAA,EAAD,CAAUC,GAAI7B,EAAc8B,QAAQ,OAAOC,eAAa,GACtD,kBAACjL,EAAA,EAAD,CAAKkL,OAAQ,GACX,kBAACC,GAAA,EAAD,CACEC,MAAM,SACN7M,MAAO,CAAE2M,OAAQ,iBACjB1K,MAAO4I,EACPgB,SAlHS,SAAA/G,GACrBgG,EAAchG,EAAE4C,OAAOzF,UAmHb,kBAAC2K,GAAA,EAAD,CACEC,MAAM,QACN7M,MAAO,CAAE2M,OAAQ,iBACjB1K,MAAO8I,EACPc,SArHQ,SAAA/G,GACpBkG,GAAalG,EAAE4C,OAAOzF,UAsHZ,kBAAC2K,GAAA,EAAD,CACEC,MAAM,QACN7M,MAAO,CAAE2M,OAAQ,iBACjB1K,MAAOgJ,GACPY,SAxHQ,SAAA/G,GACpBoG,GAAapG,EAAE4C,OAAOzF,UAyHZ,kBAAC2K,GAAA,EAAD,CACEC,MAAM,OACN7M,MAAO,CAAE2M,OAAQ,iBACjB1K,MAAOkJ,GACPU,SA3HO,SAAA/G,GACnBsG,GAAYtG,EAAE4C,OAAOzF,UA4HX,kBAAC2K,GAAA,EAAD,CACEC,MAAM,eACN7M,MAAO,CAAE2M,OAAQ,iBACjB1K,MAAOsJ,GACPM,SA9Hc,SAAA/G,GAC1B0G,GAAmB1G,EAAE4C,OAAOzF,UA+HlB,kBAAC2K,GAAA,EAAD,CACEC,MAAM,kBACN7M,MAAO,CAAE2M,OAAQ,iBACjB1K,MAAOwJ,GACPI,SAjIiB,SAAA/G,GAC7B4G,GAAsB5G,EAAE4C,OAAOzF,UAkIrB,kBAAC2K,GAAA,EAAD,CACEC,MAAM,SACN7M,MAAO,CAAE2M,OAAQ,iBACjB1K,MAAOoJ,GACPQ,SApIS,SAAA/G,GACrBwG,GAAcxG,EAAE4C,OAAOzF,gBClGZ6K,GAnCG,SAAC,GAA6B,IAA3BnK,EAA0B,EAA1BA,OAAQ+G,EAAkB,EAAlBA,YAC3B,OACE,kBAAC7I,EAAA,EAAD,CAAgBC,UAAWF,KACzB,kBAACG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACzC,EAAA,EAAD,KACE,kBAACM,EAAA,EAAD,WACA,kBAACA,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,YACA,kBAACA,EAAA,EAAD,eACA,kBAACA,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,eACA,kBAACA,EAAA,EAAD,iBAGJ,kBAACoC,EAAA,EAAD,KACG0B,EACGA,EAAOzB,KAAI,SAAC8C,EAAO7C,GACjB,OACE,kBAAC,GAAD,eACEC,IAAKD,GACD6C,EAFN,CAGEG,MAAOH,EAAMG,MACbC,IAAKJ,EAAMI,IACXsF,YAAaA,QAInB,S,UCvBRqD,GAAW,SAAA5N,GAAU,IACjB6N,EAAqC7N,EAArC6N,SAAU/K,EAA2B9C,EAA3B8C,MAAOd,EAAoBhC,EAApBgC,MAAU8L,EADX,YACqB9N,EADrB,8BAGxB,OACE,uCACE+N,KAAK,WACLC,OAAQlL,IAAUd,EAClB+C,GAAE,0BAAqB/C,GACvBiM,kBAAA,qBAA+BjM,IAC3B8L,GAEHhL,IAAUd,GAAS,kBAACM,EAAA,EAAD,CAAK4L,EAAG,GAAIL,KAYhC1O,GAAYH,aAAW,SAAAmC,GAAK,MAAK,CACrCgN,KAAM,CACJC,SAAU,EACVC,gBAAiBlN,EAAMmN,QAAQC,WAAWC,MAC1CnN,UAAW,YAMToN,GAAY,CAChBC,WAAY,CACV7N,MAAO,CACL8N,UAAWC,IACX9N,MAAO,OAIP+N,GAAW,CACf,CAAEC,KAAM,SAAU7L,KAAM,iBACxB,CAAE6L,KAAM,QAAS7L,KAAM,gBACvB,CAAE6L,KAAM,QAAS7L,KAAM,gBACvB,CAAE6L,KAAM,OAAQ7L,KAAM,eACtB,CAAE6L,KAAM,eAAgB7L,KAAM,sBAC9B,CAAE6L,KAAM,kBAAmB7L,KAAM,yBACjC,CAAE6L,KAAM,SAAU7L,KAAM,kBAqGX8L,GAlGe,SAAAvL,GAC5B,IApCgBxB,EAoCVwC,EAAWC,cACX1F,EAAUI,KAFsB,EAGZsE,mBAAS,GAHG,mBAG/BX,EAH+B,KAGxBkM,EAHwB,OAIEvL,oBAAS,GAJX,mBAI/B+H,EAJ+B,KAIjBC,EAJiB,OAKchI,mBAAS,IALvB,mBAK/BwL,EAL+B,KAKXC,EALW,OAMMzL,mBAAS,IANf,mBAM/B0L,EAN+B,KAMfC,EANe,KA8BtC,OAXA1K,qBAAU,WACH8G,IACH0D,EAAsB,IACtBE,EAAkB,OAEnB,CAAC5D,IAEJ9G,qBAAU,WACR0K,EAAkB,MACjB,CAACH,IAGF,yBAAK3P,UAAWP,EAAQoP,MACtB,kBAACjO,EAAA,EAAD,CAAQ6F,SAAS,UACf,kBAACsJ,GAAA,EAAD,CACEvM,MAAOA,EACP4J,SA3Ba,SAACrE,EAAOiH,GAC3BN,EAASM,IA2BHxC,aAAW,mBAEX,kBAACyC,GAAA,EAAD,eACE7B,MAAM,mBAzET,CACL3I,GAAG,cAAD,OAFY/C,EA2EQ,GAxEtB,gBAAgB,mBAAhB,OAAoCA,IAsE9B,CAGEzC,QAAS,WACPkM,GAAiBD,SAKzB,kBAAC,GAAD,CAAU1I,MAAOA,EAAOd,MAAO,GAC7B,kBAACoL,GAAA,EAAD,CAAUC,GAAI7B,EAAc8B,QAAQ,OAAOC,eAAa,GACtD,kBAACiC,GAAA,EAAD,CACEC,cAAY,EACZ/B,MAAM,gBACN5K,MAAOmM,EACPvC,SAAU,SAAA/G,GACRuJ,EAAsBvJ,EAAE4C,OAAOzF,QAEjC4M,MAAO,kBAACjD,GAAA,EAAD,MACPgC,UAAWA,GACXkB,WAAY,CAAE,aAAc,iBAC5B9O,MAAO,CAAEC,MAAO,QAASO,UAAW,WAEpC,kBAACiI,EAAA,EAAD,CAAUsG,UAAQ,EAAC9M,MAAM,IACvB,uDAED+L,GAAS9M,KAAI,SAAC8N,EAAM7N,GAAP,OACZ,kBAACsH,EAAA,EAAD,CACErH,IAAKD,EACLc,MAAO+M,EAAK5M,KACZpC,MAAO,CACLiP,WAAYD,EAAK5M,OAASgM,EAAqB,OAAS,KAGzDY,EAAKf,UAIZ,kBAACrB,GAAA,EAAD,CACEC,MAAM,WACN7M,MAAO,CAAE2M,OAAQ,iBACjB1K,MAAOqM,EACPzC,SAAU,SAAA/G,GACRyJ,EAAkBzJ,EAAE4C,OAAOzF,UAG/B,kBAACkH,EAAA,EAAD,CACEhJ,QAAQ,YACR2L,KAAK,QACLhK,MAAM,UACNpD,QA7Ea,WACM,KAAvB0P,GAAgD,KAAnBE,GAC/B3K,EJ3BG,CACLvB,KA9CgC,uBA+ChC8M,QI0BuB,CAAE9M,KAAMgM,EAAoBnM,MAAOqM,OAsEpD,WC1FKa,GApDO,SAAA/P,GAAY,IAAD,EACWwD,mBAAS,IADpB,mBACxBwM,EADwB,KACTC,EADS,KAkC/B,OAhCAxL,qBAAU,WACR,GAAIzE,EAAQA,QAAS,CACnB,IAAIkQ,EAAO,GACXC,OAAOC,KAAKpQ,EAAQA,SAAS8B,KAAI,SAAA9C,GAC/B,OAAQA,GACN,IAAK,OACHkR,EAAK3Q,KAAK,CAAC,OAAQS,EAAQA,QAAR,OACnB,MACF,IAAK,SACHkQ,EAAK3Q,KAAK,CAAC,SAAUS,EAAQA,QAAR,SACrB,MACF,IAAK,QACHkQ,EAAK3Q,KAAK,CAAC,QAASS,EAAQA,QAAR,QACpB,MACF,IAAK,aACHkQ,EAAK3Q,KAAK,CAAC,aAAcS,EAAQA,QAAR,aACzB,MACF,IAAK,WACHkQ,EAAK3Q,KAAK,CAAC,WAAYS,EAAQA,QAAR,WACvB,MACF,IAAK,gBACHkQ,EAAK3Q,KAAK,CAAC,gBAAiBS,EAAQA,QAAR,gBAC5B,MACF,IAAK,SACHkQ,EAAK3Q,KAAK,CAAC,SAAUS,EAAQA,QAAR,aAI3BiQ,EAAiBC,MAElB,CAAClQ,IAGF,kBAACyB,EAAA,EAAD,CAAgBC,UAAWF,KACzB,kBAACG,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,KACGmO,EAAclO,KAAI,SAAC9C,EAAK+C,GACvB,OACE,kBAAC5C,EAAA,EAAD,CAAUC,OAAK,EAAC4C,IAAKD,GACnB,kBAACtC,EAAA,EAAD,KAAYT,EAAI,IAChB,kBAACS,EAAA,EAAD,KAAYT,EAAI,YC6DjBqR,GAlGC,SAAC,GAMV,IALLrQ,EAKI,EALJA,QACAsQ,EAII,EAJJA,cACAhN,EAGI,EAHJA,gBACAC,EAEI,EAFJA,OACA+G,EACI,EADJA,YACI,EAC4B9G,mBAAS,GADrC,mBACG+M,EADH,KACaC,EADb,KAGExO,EAAQyO,cAARzO,IAENyC,qBAAU,WACR6L,EAActO,KACb,CAACsO,EAAetO,IAEnB,IAeMlD,EAfYC,aAAW,SAAAmC,GAAK,MAAK,CACrCwP,aAAc,CACZvC,SAAU,EACVC,gBAAiBlN,EAAMmN,QAAQC,WAAWC,MAC1CnN,UAAW,QAEbD,WAAY,CACVC,UAAW,OACXC,aAAc,OACdC,QAAS,QAEXC,IAAK,CACHH,UAAW,WAGClC,GAEVyO,EAAW,SAAA5N,GAAU,IACjB6N,EAAqC7N,EAArC6N,SAAU/K,EAA2B9C,EAA3B8C,MAAOd,EAAoBhC,EAApBgC,MAAU8L,EADX,YACqB9N,EADrB,8BAGxB,OACE,uCACE+N,KAAK,WACLC,OAAQlL,IAAUd,EAClB+C,GAAE,0BAAqB/C,GACvBiM,kBAAA,qBAA+BjM,IAC3B8L,GAEHhL,IAAUd,GACT,kBAACM,EAAA,EAAD,CAAK4L,EAAG,GAELL,KAOL+C,EAAY,SAAA5O,GAChB,MAAO,CACL+C,GAAG,cAAD,OAAgB/C,GAClB,gBAAgB,mBAAhB,OAAoCA,KAQxC,OACE,kBAAC,IAAD,CAAW1C,UAAWP,EAAQyC,KAC5B,kBAACzB,EAAW,CAAEE,YACd,kBAACwB,EAAA,EAAD,CAAOnC,UAAWP,EAAQqC,YACxB,4BAAKnB,EAAUA,EAAQ1B,KAAO,WAC9B,0CAAgB0B,EAAUA,EAAQ,eAAiB,YAGrD,kBAAC,GAAc,CAAEA,UAASsD,kBAAiBC,SAAQ+G,gBACnD,kBAAC,GAAD,CAAuB/G,OAAQA,IAC/B,yBAAKlE,UAAWP,EAAQ4R,cACtB,kBAACzQ,EAAA,EAAD,CAAQ6F,SAAS,UACf,kBAACsJ,GAAA,EAAD,CACEvM,MAAO0N,EACP9D,SAlBmB,SAACrE,EAAOiH,GACnCmB,EAAYnB,IAkBJxC,aAAW,uBAEX,kBAACyC,GAAA,EAAD,eAAK7B,MAAM,UAAakD,EAAU,KAClC,kBAACrB,GAAA,EAAD,eAAK7B,MAAM,gBAAmBkD,EAAU,OAG5C,kBAAChD,EAAD,CAAU9K,MAAO0N,EAAUxO,MAAO,GAC/B/B,GAAWuD,EACV,kBAAC,GAAD,CAAWA,OAAQA,EAAQ+G,YAAaA,IACtC,MAEN,kBAACqD,EAAD,CAAU9K,MAAO0N,EAAUxO,MAAO,GAChC,kBAAC,GAAkB,CAAE/B,gBCnFhBkC,gBAnBS,SAACC,GACvB,MAAO,CACLnC,QAASmC,EAAMyO,gBACftN,gBAAiBnB,EAAM0O,wBACvBtN,OAAQpB,EAAM4I,0BAIS,SAACxG,GAC1B,MAAO,CACL+F,YAAa,SAACvH,GACZwB,EPUC,SAAqBxB,GAC1B,MAAO,CACLC,KAtBwB,eAuBxBD,WObWuH,CAAYvH,KAEvBuN,cAAe,SAACtO,GACduC,EPPC,SAAuBvC,GAC5B,MAAO,CACLgB,KAb0B,iBAc1BhB,OOIWsO,CAActO,QAKdE,CAA6CmO,ICa7CS,OArBf,WACE,OACE,kBAAC,IAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK3R,UAAU,OACb,kBAAC4R,EAAA,EAAD,CAAKC,GAAI,IACP,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,iBACV,kBAACC,GAAD,a,gDCxBHC,GAAb,+H,OAA4BC,SAAfD,GACJE,WAAa,IAAIF,GADbA,GAEJG,SAAW,IAAIH,GAFXA,GAGJI,YAAc,IAAIJ,GAHdA,GAIJK,SAAW,IAAIL,GAJXA,GAKJM,EALIN,GAKKO,YCKlB,IAAM3O,GAAe,CACnBjC,SAAU,GACV6Q,sBAAuBR,GAAOG,SAC9Bb,gBAAiB,KACjBC,wBAAyB,KACzB9F,sBAAuB,GACvBtB,cAAe,MAGXtE,GAAc,SAAA4M,GAClB,MACE,QACA,IACqB,IAAhBpP,KAAKqP,aACW,IAAhBrP,KAAKqP,aACW,IAAhBrP,KAAKqP,UACRD,GAAS,GAEX,K,aC9BSE,GAAc,SAAC9P,GAAD,OAAWA,EAAMlB,UAC/BiR,GAAqB,SAAC/P,GAAD,OAAWA,EAAMyO,iBACtCuB,GAA2B,SAAChQ,GAAD,OAAWA,EAAM2P,uBCA5CM,GAAiB,SAACC,GAAD,uEAFT,OAES,4BACuDA,I,YCYpEC,I,YAQAhC,I,YASAiC,I,YASQC,IA1BlB,SAAUF,KAAV,6EACQ,OADR,SACcG,aAAON,IADrB,OAGY,OAFbE,EADC,OAECK,EAAWN,GAAeC,EAAOM,SAFlC,SAGkBC,aAAKC,MAAOH,GAH9B,OAIQ,OADPI,EAHD,gBAIcA,EAASC,OAJvB,OAKL,OADM1M,EAJD,iBAKC2M,aAAI,CAAEhQ,KbjBiB,kBaiBM/B,SAAUoF,IALxC,yCAQA,SAAUiK,GAAc2C,GAAxB,uEACY,OADZ,SACkBR,aAAOR,IADzB,WACChR,EADD,SAEgC,IAApBA,EAASvC,OAFrB,gBAGH,OAHG,SAGGkU,aAAKN,IAHR,OAKL,OALK,SAKCU,aAAI,CAAEhQ,Kb3BsB,uBa2BMhB,IAAKiR,EAAOjR,MAL/C,OAML,OANK,UAMC4Q,aAAKL,IANN,yCASA,SAAUA,KAAV,+EACiB,OADjB,SACuBE,aAAOP,IAD9B,OAIY,OAHbtB,EADC,OAEDsC,EAAYtC,EAAgBsC,UD7BCC,EC8BGD,EAA9BR,ED9B0B,iEALb,OAKa,0BACiDU,mBAC/ED,ICyBG,SAIkBP,aAAKC,MAAOH,GAJ9B,OAKO,OADNI,EAJD,iBAKaA,EAASjE,OALtB,QAML,OADMwE,EALD,iBAMCL,aAAI,CAAEhQ,KblCgC,iCakCMqQ,QAN7C,kCD3B2B,IAACF,IC2B5B,IASQ,SAAUX,KAAV,iEACb,OADa,SACPc,abxCqB,gBawCKhB,IADnB,OAEb,OAFa,SAEPgB,ab3CsB,iBa2CKhD,IAFpB,wCC7BKiD,QACW,cAA7BhM,OAAOiM,SAASC,UAEe,UAA7BlM,OAAOiM,SAASC,UAEhBlM,OAAOiM,SAASC,SAAS7T,MACvB,2DCHN,IAAM8T,GAAiBC,cACjBC,GAAQC,aLkBC,WAAoD,IAA/B1R,EAA8B,uDAAtBe,GAAc+P,EAAQ,uCAChE,OAAQA,EAAOjQ,MACb,IVnCgC,uBUoC9B,IAAI4N,EAAkBzO,EAAMlB,SAASsF,MACnC,SAAAuN,GAAC,OAAIA,EAAE,iBAAmBb,EAAOjR,OAG/B+I,EAAwBoF,OAAO4D,OAAO,GAAInD,EAAgBjS,SAE1DoG,EAAQ,EAyBZ,OAvBAgG,EAAsBpG,SAAQ,SAACC,EAAOoP,EAAGC,GACvC,IAAIC,EAAYnP,EACZoP,EAAUpP,EAAQH,EAAMwB,SAC5BrB,EAAQoP,EAERF,EAAID,GAAGjP,MAAQmP,EACfD,EAAID,GAAGhP,IAAMmP,EACbF,EAAID,GAAJ,QAAmB,EACnBC,EAAID,GAAJ,MAAiB,EACjBC,EAAID,GAAJ,YAAwB7O,GAAY,IACpC8O,EAAID,GAAJ,SAAoB,EACpBC,EAAID,GAAJ,UAAqB,EACrBC,EAAID,GAAJ,cAA0B,GAC1BC,EAAID,GAAJ,cAA0B,GAC1BC,EAAID,GAAJ,aAAyB,GACzBC,EAAID,GAAJ,aAAyB,GACzBC,EAAID,GAAJ,YAAwB,GACxBC,EAAID,GAAJ,mBAA+B,GAC/BC,EAAID,GAAJ,sBAAkC,MAK7B,gBACF7R,EADL,CAEEyO,kBACA7F,0BAEJ,IVrE0C,iCUsExC,OAAO,gBACF5I,EADL,CAEE0O,wBAAyBoC,EAAOI,MAEpC,IV3E2B,kBU4EzB,IAAIe,EAAqBnB,EAAOhS,SAASoT,MAAK,SAACC,EAAIC,GACjD,OAAID,EAAGE,mBAAqBD,EAAGC,mBACtB,GAED,KAEV,OAAO,gBACFrS,EADL,CAEElB,SAAUmT,IAEd,IVpFwB,eUqFtB,IAAI3K,EAAgBtH,EAAM4I,sBAAsBxE,MAC9C,SAAAkO,GAAC,OAAIA,EAAE1R,UAAYkQ,EAAOlQ,WAG5B,OAAO,gBACFZ,EADL,CAEEsH,kBAEJ,IV3FwB,eU6FtB,IAAIiL,EAAe,CACjB3R,QAASZ,EAAM4I,sBAAsBrM,OAAS,EAC9CqG,MAAOkO,EAAO5M,KAAKtB,MACnBC,IAAKiO,EAAO5M,KAAKrB,IACjBoB,SAAU6M,EAAO5M,KAAKD,SACtBgL,KAAM,GACN8B,UAAW,GACXyB,WAAY,GACZ1P,QAAQ,EACRC,MAAM,EACNC,YAAaA,GAAY,IACzBiF,SAAS,EACTS,UAAU,EACVR,cAAe,GACfK,cAAe,GACfH,aAAc,GACdC,aAAc,GACdC,YAAa,GACbE,mBAAoB,GACpBC,sBAAuB,IAGrBgK,EAAQ,uBAAOzS,EAAM4I,uBAAb,CAAoC2J,IAKhD,OAJAE,EAAWA,EAASP,MAAK,SAAC7O,EAAGqP,GAAJ,OAAUrP,EAAET,MAAQ8P,EAAE9P,UACtCjD,KAAI,SAAC9C,EAAK+C,GACjB/C,EAAI+D,QAAUhB,EAAQ,KAEjB,gBACFI,EADL,CAEE4I,sBAAsB,aAAK6J,KAE/B,IV3HwB,eU4HtB,IAAIE,EAAe3S,EAAM4I,sBAAsBgK,QAC7C,SAAAN,GAAC,OAAIA,EAAE1R,UAAYkQ,EAAOlQ,WAM5B,OAJA+R,EAAahT,KAAI,SAAC9C,EAAK+C,GACrB/C,EAAI+D,QAAUhB,EAAQ,KAGjB,gBACFI,EADL,CAEE4I,sBAAsB,aAAK+J,KAE/B,IVzIsB,aU0IpB,IAAIhI,EAAc3K,EAAM4I,sBAAsBxE,MAC5C,SAAAkO,GAAC,OAAIA,EAAE1R,UAAYkQ,EAAOlQ,QAAQA,WAGpC,OAAO,gBACFZ,EADL,CAEE4I,sBAAuB5I,EAAM4I,sBAAsBjJ,KAAI,SAAA2S,GACrD,OAAOA,EAAE1R,UAAYkQ,EAAOlQ,QAAQA,QAAU0R,EAAI3H,OAGxD,IVjJgC,uBUkJ9B,OAAO,gBACF3K,EADL,CAEE4I,sBAAuB5I,EAAM4I,sBAAsBjJ,KAAI,SAAA2S,GAErD,OADAA,EAAExB,EAAOnD,QAAQ9M,MAAQiQ,EAAOnD,QAAQjN,MACjC4R,OAGb,QACE,OAAOtS,KKnJ0B6S,YAAgBtB,KACvDA,GAAeuB,IAAIzC,IACnBoB,GAAMrP,SfCG,CACLvB,KAlByB,gBAmBzBqP,OeHwBf,GAAOG,WAEnCyD,iBACE,kBAAC,IAAD,CAAUtB,MAAOA,IACf,kBAAC,GAAD,OAEFuB,SAASC,eAAe,SD2GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.9ada78ad.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.22b06b30.png\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst secondsToHours = (secs) => {\r\n  return new Date(secs * 1000)\r\n    .toUTCString()\r\n    .match(/(\\d\\d:\\d\\d:\\d\\d)/)[0]\r\n    .replace(/^0/, \"\");\r\n};\r\n\r\nconst SessionRow = ({\r\n  \"session-key\": sessionKey,\r\n  start_time,\r\n  name,\r\n  artist,\r\n  venue,\r\n  promoter_name,\r\n  length,\r\n  outputs,\r\n}) => {\r\n  let history = useHistory();\r\n\r\n  const useStyles = makeStyles({\r\n    row: {\r\n      cursor: \"pointer\",\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n\r\n  const handleClick = (sessionKey) => {\r\n    history.push(`/session/${sessionKey}`);\r\n  };\r\n\r\n  return (\r\n    <TableRow\r\n      hover\r\n      className={classes.row}\r\n      onClick={() => handleClick(sessionKey)}\r\n    >\r\n      <TableCell>{start_time}</TableCell>\r\n      <TableCell>{name}</TableCell>\r\n      <TableCell>{artist}</TableCell>\r\n      <TableCell>{venue}</TableCell>\r\n      <TableCell>{promoter_name}</TableCell>\r\n      <TableCell>{secondsToHours(length)}</TableCell>\r\n      <TableCell>{(outputs || []).length}</TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nSessionRow.propTypes = {\r\n  // ['session-key']: PropTypes.string.isRequired,\r\n  start_time: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  artist: PropTypes.string,\r\n  venue: PropTypes.string,\r\n  promoter_name: PropTypes.string,\r\n  // length: PropTypes.number,\r\n  outputs: PropTypes.array,\r\n};\r\n\r\nexport default SessionRow;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nexport default function NavBar(props) {\r\n  const session = props.session;\r\n  return (\r\n    <AppBar>\r\n      <Toolbar>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-between\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Link to=\"/\">\r\n            <img\r\n              src={require(\"../assets/logo.png\")}\r\n              alt=\"logo\"\r\n              style={{ width: \"6rem\" }}\r\n            />\r\n          </Link>\r\n          <div>\r\n            {session && (\r\n              <Typography variant=\"h6\">\r\n                {session ? session.artist : \"Artist\"}\r\n                {\" / \"} {session ? session.name : \"Name\"}\r\n                {\" / \"}\r\n                {session ? session.venue : \"Venue\"}\r\n              </Typography>\r\n            )}\r\n          </div>\r\n        </Grid>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport SessionRow from \"./SessionRow\";\r\nimport NavBar from \"./NavBar\";\r\n\r\nconst SessionList = ({ sessions }) => {\r\n  const useStyles = makeStyles(theme => ({\r\n    paperClass: {\r\n      marginTop: \"20px\",\r\n      marginBottom: \"20px\",\r\n      padding: \"10px\",\r\n    },\r\n    mt7: {\r\n      marginTop: \"7rem\",\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container className={classes.mt7}>\r\n      <NavBar />\r\n      <Paper className={classes.paperClass}>\r\n        <h1>Sessions</h1>\r\n      </Paper>\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Start Date</TableCell>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell>Artist</TableCell>\r\n              <TableCell>Venue</TableCell>\r\n              <TableCell>Promoter</TableCell>\r\n              <TableCell>Length</TableCell>\r\n              <TableCell>Track Count</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {sessions.map((session, index) => (\r\n              <SessionRow key={index} {...session} />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SessionList;\r\n","import { connect } from 'react-redux';\r\nimport SessionList from '../components/SessionList';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    sessions: state.sessions,\r\n  };\r\n};\r\n\r\nconst SessionListContainer = connect(mapStateToProps)(SessionList);\r\n\r\nexport default SessionListContainer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nexport default function LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <Box width=\"100%\" mr={1}>\r\n        <LinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box minWidth={35}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n          props.value\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n","export const SELECT_SESSION = \"SELECT_SESSION\";\r\nexport const SET_SELECTED_SESSION = \"SET_SELECTED_SESSION\";\r\nexport const LOAD_SESSIONS = \"LOAD_SESSIONS\";\r\nexport const RENDER_SESSIONS = \"RENDER_SESSIONS\";\r\nexport const SET_SELECTED_SESSION_AUDIO_URL = \"SET_SELECTED_SESSION_AUDIO_URL\";\r\nexport const SELECT_TRACK = \"SELECT_TRACK\";\r\nexport const EDIT_TRACK = \"EDIT_TRACK\";\r\nexport const CREATE_TRACK = \"CREATE_TRACK\";\r\nexport const DELETE_TRACK = \"DELETE_TRACK\";\r\nexport const EDIT_GLOBAL_METADATA = \"EDIT_GLOBAL_METADATA\";\r\n\r\nexport function selectSession(key) {\r\n  return {\r\n    type: SELECT_SESSION,\r\n    key,\r\n  };\r\n}\r\n\r\nexport function loadSessions(status) {\r\n  return {\r\n    type: LOAD_SESSIONS,\r\n    status,\r\n  };\r\n}\r\n\r\nexport function selectTrack(segment) {\r\n  return {\r\n    type: SELECT_TRACK,\r\n    segment,\r\n  };\r\n}\r\n\r\nexport function createTrack(data) {\r\n  return {\r\n    type: CREATE_TRACK,\r\n    data,\r\n  };\r\n}\r\n\r\nexport function deleteTrack(segment) {\r\n  return {\r\n    type: DELETE_TRACK,\r\n    segment,\r\n  };\r\n}\r\n\r\nexport function editTrack(segment) {\r\n  return {\r\n    type: EDIT_TRACK,\r\n    segment,\r\n  };\r\n}\r\n\r\nexport function editGlobalMetaData(payload) {\r\n  return {\r\n    type: EDIT_GLOBAL_METADATA,\r\n    payload,\r\n  };\r\n}\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport WaveSurfer from \"wavesurfer.js\";\r\nimport LinearProgressWithLabel from \"./LinearProgressWithLabel\";\r\nimport RegionsPlugin from \"wavesurfer.js/dist/plugin/wavesurfer.regions.min\";\r\nimport MinimapPlugin from \"wavesurfer.js/dist/plugin/wavesurfer.minimap.min\";\r\nimport TimelinePlugin from \"wavesurfer.js/dist/plugin/wavesurfer.timeline.min\";\r\nimport PauseIcon from \"@material-ui/icons/Pause\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { editTrack, createTrack, deleteTrack } from \"../actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst initialState = {\r\n  mouseX: null,\r\n  mouseY: null,\r\n};\r\n\r\nconst minPxPerSec = 5;\r\n\r\nconst AudioWave = ({ session, sessionAudioURL, tracks }) => {\r\n  const [loadingProgress, setLoadingProgress] = useState(0);\r\n  const [waveSurfer, setWaveSurfer] = useState(null);\r\n  const [audioReady, setAudioReady] = useState(false);\r\n  const [contextState, setContextState] = useState(initialState);\r\n  const [contextMenuSegment, setContextMenuSegment] = useState(null);\r\n  const playButton = useRef(null);\r\n  const forOutFocusRegion = useRef(null);\r\n  const pauseButton = useRef(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const playPause = () => {\r\n    if (waveSurfer) waveSurfer.playPause();\r\n  };\r\n\r\n  const createWavesurferInstance = () => {\r\n    if (waveSurfer) return;\r\n\r\n    setWaveSurfer(\r\n      WaveSurfer.create({\r\n        container: \".waveform\",\r\n        height: 150,\r\n        scrollParent: true,\r\n        normalize: true,\r\n        minimap: true,\r\n        minPxPerSec: minPxPerSec,\r\n        plugins: [\r\n          RegionsPlugin.create(),\r\n          MinimapPlugin.create({\r\n            height: 30,\r\n            waveColor: \"#ddd\",\r\n            progressColor: \"#999\",\r\n            cursorColor: \"#999\",\r\n          }),\r\n          TimelinePlugin.create({\r\n            container: \".waveformTimeLine\",\r\n          }),\r\n        ],\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleClick = event => {\r\n    event.preventDefault();\r\n    if (\"wavesurfer-region\" === event.target.className) {\r\n      setContextMenuSegment(Number(event.target.getAttribute(\"data-id\")));\r\n      setContextState({\r\n        mouseX: event.clientX - 2,\r\n        mouseY: event.clientY - 4,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setContextState(initialState);\r\n  };\r\n\r\n  const handleLockMenu = () => {\r\n    if (tracks) {\r\n      var lockStatus = false;\r\n      tracks.map(row => {\r\n        if (row.segment === contextMenuSegment) {\r\n          lockStatus = row.drag;\r\n        }\r\n      });\r\n      tracks.forEach(track => {\r\n        if (track.segment === contextMenuSegment) {\r\n          if (!lockStatus) {\r\n            track.resize = true;\r\n            track.drag = true;\r\n          } else {\r\n            track.resize = false;\r\n            track.drag = false;\r\n          }\r\n        }\r\n      });\r\n      let activeSegment = tracks.find(\r\n        row => row.segment === contextMenuSegment\r\n      );\r\n      if (activeSegment) {\r\n        dispatch(editTrack(activeSegment));\r\n      }\r\n      setContextState(initialState);\r\n    }\r\n  };\r\n\r\n  const handleRemoveMenu = () => {\r\n    if (contextMenuSegment) {\r\n      dispatch(deleteTrack(contextMenuSegment));\r\n    }\r\n    setContextState(initialState);\r\n  };\r\n\r\n  const handleMetaMenu = () => {\r\n    setContextState(initialState);\r\n    tracks.forEach(track => {\r\n      if (track.segment === contextMenuSegment) {\r\n        track[\"collapse\"] = true;\r\n      }\r\n    });\r\n    let openCollapseTrack = tracks.find(\r\n      row => row.segment === contextMenuSegment\r\n    );\r\n    if (openCollapseTrack) {\r\n      dispatch(editTrack(openCollapseTrack));\r\n    }\r\n  };\r\n\r\n  const handleMergePrevMenu = () => {\r\n    setContextState(initialState);\r\n    if (contextMenuSegment > 1) {\r\n      let selectedTrack = tracks.find(\r\n        row => row.segment === contextMenuSegment\r\n      );\r\n      let previousTrackSegment = contextMenuSegment - 1;\r\n      let perviousTrack = tracks.find(\r\n        row => row.segment === previousTrackSegment\r\n      );\r\n\r\n      selectedTrack.start = perviousTrack.start;\r\n      selectedTrack.end =\r\n        perviousTrack.end > selectedTrack.end\r\n          ? perviousTrack.end\r\n          : selectedTrack.end;\r\n      selectedTrack.duration =\r\n        Math.round(selectedTrack.end) - Math.round(selectedTrack.start);\r\n\r\n      dispatch(editTrack(selectedTrack));\r\n      dispatch(deleteTrack(previousTrackSegment));\r\n    }\r\n  };\r\n\r\n  const handleMergeNextMenu = () => {\r\n    setContextState(initialState);\r\n    if (contextMenuSegment < tracks.length) {\r\n      let selectedTrack = tracks.find(\r\n        row => row.segment === contextMenuSegment\r\n      );\r\n      let nextTrackSegment = contextMenuSegment + 1;\r\n      let nextTrack = tracks.find(row => row.segment === nextTrackSegment);\r\n\r\n      selectedTrack.start = selectedTrack.start;\r\n      selectedTrack.end =\r\n        nextTrack.end > selectedTrack.end ? nextTrack.end : selectedTrack.end;\r\n      selectedTrack.duration =\r\n        Math.round(selectedTrack.end) - Math.round(selectedTrack.start);\r\n\r\n      dispatch(editTrack(selectedTrack));\r\n      dispatch(deleteTrack(nextTrackSegment));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const loadRegions = () => {\r\n      if (!session) return;\r\n      waveSurfer.clearRegions();\r\n\r\n      tracks.forEach((track, index) => {\r\n        let region = {\r\n          id: track.segment,\r\n          start: track.start,\r\n          end: track.end,\r\n          resize: track.resize,\r\n          drag: track.drag,\r\n          color: track.regionColor,\r\n        };\r\n        waveSurfer.addRegion(region);\r\n      });\r\n    };\r\n\r\n    if (audioReady) {\r\n      loadRegions();\r\n    }\r\n  }, [tracks, audioReady, session, waveSurfer]);\r\n\r\n  useEffect(() => {\r\n    if (!waveSurfer) return;\r\n    waveSurfer.un(\"region-click\");\r\n    waveSurfer.un(\"region-dblclick\");\r\n    waveSurfer.un(\"region-update-end\");\r\n    waveSurfer.un(\"region-mouseleave\");\r\n    waveSurfer.un(\"seek\");\r\n\r\n    waveSurfer.on(\"loading\", async loadedProgress => {\r\n      setLoadingProgress(loadedProgress);\r\n    });\r\n\r\n    waveSurfer.on(\"ready\", () => {\r\n      waveSurfer.enableDragSelection({\r\n        color: \"rgba(100,100,100,0.1)\",\r\n      });\r\n      setAudioReady(true);\r\n    });\r\n\r\n    waveSurfer.on(\"region-click\", (region, e) => {\r\n      e.stopPropagation();\r\n      waveSurfer.play(region.start + e.offsetX / minPxPerSec);\r\n    });\r\n\r\n    waveSurfer.on(\"seek\", position => {\r\n      waveSurfer.play(position * waveSurfer.getDuration());\r\n    });\r\n\r\n    waveSurfer.on(\"region-dblclick\", (region, e) => {\r\n      e.stopPropagation();\r\n      let start = region.start - 3 < 0 ? 0 : region.start - 3;\r\n      waveSurfer.play(start, region.end);\r\n    });\r\n\r\n    waveSurfer.on(\"region-mouseleave\", (region, e) => {\r\n      forOutFocusRegion.current.click();\r\n    });\r\n\r\n    waveSurfer.on(\"play\", () => {\r\n      playButton.current.style.display = \"none\";\r\n      pauseButton.current.style.display = \"\";\r\n    });\r\n\r\n    waveSurfer.on(\"region-update-end\", region => {\r\n      if (isNaN(region.id)) {\r\n        let newRegion = {\r\n          start: Math.round(region.start),\r\n          end: Math.round(region.end),\r\n          duration: Math.round(region.end) - Math.round(region.start),\r\n        };\r\n        dispatch(createTrack(newRegion));\r\n        return;\r\n      }\r\n\r\n      tracks.forEach(track => {\r\n        if (track.segment === region.id) {\r\n          track.start = Math.round(region.start);\r\n          track.end = Math.round(region.end);\r\n          track.duration = Math.round(region.end) - Math.round(region.start);\r\n        }\r\n      });\r\n      let updatedRegion = tracks.find(row => row.segment === region.id);\r\n      dispatch(editTrack(updatedRegion));\r\n    });\r\n\r\n    waveSurfer.on(\"pause\", () => {\r\n      playButton.current.style.display = \"\";\r\n      pauseButton.current.style.display = \"none\";\r\n    });\r\n  }, [waveSurfer, tracks]);\r\n\r\n  useEffect(() => {\r\n    if (!waveSurfer) {\r\n      createWavesurferInstance();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (waveSurfer && sessionAudioURL) {\r\n      waveSurfer.load(sessionAudioURL);\r\n      window.addEventListener(\"keyup\", e => {\r\n        if (e.keyCode === 32 && waveSurfer) {\r\n          waveSurfer.playPause();\r\n        }\r\n      });\r\n    }\r\n  }, [waveSurfer, sessionAudioURL]);\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    timelineContainer: {\r\n      padding: \"10px\",\r\n    },\r\n    rmButton: {\r\n      marginTop: \"20px\",\r\n      width: \"120px\",\r\n    },\r\n    waveformContainer: {\r\n      height: \"180px\",\r\n    },\r\n    waveformTimelineContainer: {\r\n      height: \"20px\",\r\n      position: \"relative\",\r\n    },\r\n    contextMenuTitle: {\r\n      textAlign: \"center\",\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Paper className={classes.timelineContainer} elevation={3}>\r\n        <div\r\n          className={`waveform ${classes.waveformContainer}`}\r\n          onContextMenu={handleClick}\r\n          style={{ cursor: \"context-menu\" }}\r\n        />\r\n        <div\r\n          className={`waveformTimeLine ${classes.waveformTimelineContainer}`}\r\n        />\r\n      </Paper>\r\n      <Menu\r\n        keepMounted\r\n        open={contextState.mouseY !== null}\r\n        onClose={handleClose}\r\n        anchorReference=\"anchorPosition\"\r\n        transitionDuration={0}\r\n        anchorPosition={\r\n          contextState.mouseY !== null && contextState.mouseX !== null\r\n            ? { top: contextState.mouseY, left: contextState.mouseX }\r\n            : undefined\r\n        }\r\n      >\r\n        <h6 className={classes.contextMenuTitle}>\r\n          Segment : {contextMenuSegment}\r\n        </h6>\r\n        <MenuItem onClick={handleLockMenu} key=\"Unlock/Lock\">\r\n          Unlock/Lock\r\n        </MenuItem>\r\n        <MenuItem onClick={handleRemoveMenu} key=\"Remove\">\r\n          Remove\r\n        </MenuItem>\r\n        <MenuItem onClick={handleMetaMenu} key=\"Add Meta Data\">\r\n          Add Meta Data\r\n        </MenuItem>\r\n        {contextMenuSegment > 1 && (\r\n          <MenuItem onClick={handleMergePrevMenu} key=\"Merge with previous\">\r\n            Merge with previous\r\n          </MenuItem>\r\n        )}\r\n        {contextMenuSegment < tracks.length && (\r\n          <MenuItem onClick={handleMergeNextMenu} key=\"Merge with next\">\r\n            Merge with next\r\n          </MenuItem>\r\n        )}\r\n      </Menu>\r\n      {loadingProgress && loadingProgress > 0 && loadingProgress < 100 ? (\r\n        <LinearProgressWithLabel value={loadingProgress} />\r\n      ) : null}\r\n      <div className=\"col-sm-2\" ref={forOutFocusRegion}>\r\n        <Button\r\n          variant=\"contained\"\r\n          className={classes.rmButton}\r\n          onClick={playPause}\r\n          data-action=\"play\"\r\n        >\r\n          <span id=\"play\" className=\"playButton\" ref={playButton}>\r\n            <PlayArrowIcon style={{ color: \"white\" }} />\r\n            &nbsp;Play\r\n          </span>\r\n\r\n          <span\r\n            ref={pauseButton}\r\n            id=\"pause\"\r\n            className=\"pauseButton\"\r\n            style={{ display: \"none\" }}\r\n          >\r\n            <PauseIcon style={{ color: \"white\" }} />\r\n            &nbsp;Pause\r\n          </span>\r\n        </Button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AudioWave;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  TableRow,\r\n  TableCell,\r\n  Input,\r\n  Box,\r\n  TextField,\r\n  ButtonGroup,\r\n  Button,\r\n  Collapse,\r\n} from \"@material-ui/core\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { editTrack, deleteTrack } from \"../actions\";\r\n\r\nconst secondsToHours = secs => {\r\n  return new Date(secs * 1000)\r\n    .toUTCString()\r\n    .match(/(\\d\\d:\\d\\d:\\d\\d)/)[0]\r\n    .replace(/^0/, \"\");\r\n};\r\n\r\nconst TrackRow = ({\r\n  start,\r\n  end,\r\n  segment,\r\n  duration,\r\n  drag,\r\n  editing,\r\n  selectTrack,\r\n  metaTagArtist,\r\n  metaTagTrack,\r\n  metaTagLabel,\r\n  metaTagISRC,\r\n  metaTagRegion,\r\n  metaTagReleaseDate,\r\n  metaTagAdditionalInfo,\r\n  collapse,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const tracks = useSelector(state => state.selectedSessionTracks);\r\n  const [initEditing, setEditingStatus] = useState(editing);\r\n  const [lockStatus, setLockStatus] = useState(drag);\r\n  const [initStart, setInitStart] = useState(start);\r\n  const [initEnd, setInitEnd] = useState(end);\r\n  const [initDuration, setInitDuration] = useState(duration);\r\n  const [collapseOpen, setCollapseOpen] = useState(collapse);\r\n\r\n  const [metaArtist, setMetaArtist] = useState(metaTagArtist);\r\n  const [metaTrack, setMetaTrack] = useState(metaTagTrack);\r\n  const [metaLabel, setMetaLabel] = useState(metaTagLabel);\r\n  const [metaISRC, setMetaISRC] = useState(metaTagISRC);\r\n  const [metaRegion, setMetaRegion] = useState(metaTagRegion);\r\n  const [metaReleaseDate, setMetaReleaseDate] = useState(metaTagReleaseDate);\r\n  const [metaAdditionalInfo, setMetaAdditionalInfo] = useState(\r\n    metaTagAdditionalInfo\r\n  );\r\n\r\n  const handleDeleteTrack = () => {\r\n    dispatch(deleteTrack(segment));\r\n  };\r\n\r\n  const handleLockClick = () => {\r\n    tracks.forEach(track => {\r\n      if (track.segment === segment) {\r\n        if (!lockStatus) {\r\n          track.resize = true;\r\n          track.drag = true;\r\n        } else {\r\n          track.resize = false;\r\n          track.drag = false;\r\n        }\r\n      }\r\n    });\r\n    let activeSegment = tracks.find(row => row.segment === segment);\r\n    if (activeSegment) {\r\n      dispatch(editTrack(activeSegment));\r\n    }\r\n  };\r\n\r\n  const handleStartChange = e => {\r\n    setInitStart(Math.round(e.target.value));\r\n    setInitDuration(Math.round(initEnd) - Math.round(initStart));\r\n  };\r\n\r\n  const handleEndChange = e => {\r\n    setInitEnd(Math.round(e.target.value));\r\n    setInitDuration(Math.round(initEnd) - Math.round(initStart));\r\n  };\r\n\r\n  const saveMetaData = () => {\r\n    if (collapseOpen === true) {\r\n      tracks.forEach(track => {\r\n        if (track.segment === segment) {\r\n          track[\"metaTagArtist\"] = metaArtist;\r\n          track[\"metaTagTrack\"] = metaTrack;\r\n          track[\"metaTagLabel\"] = metaLabel;\r\n          track[\"metaTagISRC\"] = metaISRC;\r\n          track[\"metaTagReleaseDate\"] = metaReleaseDate;\r\n          track[\"metaTagAdditionalInfo\"] = metaAdditionalInfo;\r\n          track[\"metaTagRegion\"] = metaRegion;\r\n          track[\"collapse\"] = false;\r\n        }\r\n      });\r\n      let editedTrack = tracks.find(row => row.segment === segment);\r\n      if (editedTrack) {\r\n        dispatch(editTrack(editedTrack));\r\n      }\r\n      setCollapseOpen(false);\r\n    }\r\n  };\r\n\r\n  const openCollapse = () => {\r\n    setCollapseOpen(true);\r\n    tracks.forEach(track => {\r\n      if (track.segment === segment) {\r\n        track[\"collapse\"] = true;\r\n      }\r\n    });\r\n    let openCollapseTrack = tracks.find(row => row.segment === segment);\r\n    if (openCollapseTrack) {\r\n      dispatch(editTrack(openCollapseTrack));\r\n    }\r\n  };\r\n\r\n  const onArtistChange = e => {\r\n    setMetaArtist(e.target.value);\r\n  };\r\n  const onTrackChange = e => {\r\n    setMetaTrack(e.target.value);\r\n  };\r\n  const onLabelChange = e => {\r\n    setMetaLabel(e.target.value);\r\n  };\r\n  const onISRCChange = e => {\r\n    setMetaISRC(e.target.value);\r\n  };\r\n  const onReleaseDateChange = e => {\r\n    setMetaReleaseDate(e.target.value);\r\n  };\r\n  const onAdditionalInfoChange = e => {\r\n    setMetaAdditionalInfo(e.target.value);\r\n  };\r\n  const onRegionChange = e => {\r\n    setMetaRegion(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow hover>\r\n        <TableCell>{segment}</TableCell>\r\n        {!initEditing && (\r\n          <>\r\n            <TableCell>{secondsToHours(start)}</TableCell>\r\n            <TableCell>{secondsToHours(end)}</TableCell>\r\n          </>\r\n        )}\r\n        {initEditing && (\r\n          <>\r\n            <TableCell>\r\n              <Input\r\n                id=\"standard-basic\"\r\n                onChange={handleStartChange}\r\n                value={initStart}\r\n                type=\"number\"\r\n              />\r\n            </TableCell>\r\n            <TableCell>\r\n              <Input\r\n                id=\"standard-basic\"\r\n                onChange={handleEndChange}\r\n                value={initEnd}\r\n                type=\"number\"\r\n              />\r\n            </TableCell>\r\n          </>\r\n        )}\r\n\r\n        <TableCell>{metaArtist}</TableCell>\r\n        <TableCell>{metaTrack}</TableCell>\r\n        <TableCell>{secondsToHours(initDuration)}</TableCell>\r\n        <TableCell>\r\n          <div className=\"btn-group\">\r\n            {!lockStatus ? (\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                onClick={handleLockClick}\r\n              >\r\n                Unlock\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                onClick={handleLockClick}\r\n              >\r\n                Lock\r\n              </Button>\r\n            )}\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              color=\"secondary\"\r\n              onClick={handleDeleteTrack}\r\n            >\r\n              Remove\r\n            </Button>\r\n            <ButtonGroup\r\n              orientation=\"vertical\"\r\n              color=\"primary\"\r\n              aria-label=\"vertical contained primary button group\"\r\n              style={{ height: \"34px\" }}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              <Button\r\n                style={{ height: \"17px\" }}\r\n                onClick={() => {\r\n                  saveMetaData();\r\n                }}\r\n              >\r\n                <ExpandLessIcon style={{ height: \"17px\" }} />\r\n              </Button>\r\n              <Button style={{ height: \"17px\" }} onClick={openCollapse}>\r\n                <ExpandMoreIcon style={{ height: \"17px\" }} />\r\n              </Button>\r\n            </ButtonGroup>\r\n          </div>\r\n        </TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={7}>\r\n          <Collapse in={collapseOpen} timeout=\"auto\" unmountOnExit>\r\n            <Box margin={1}>\r\n              <TextField\r\n                label=\"Artist\"\r\n                style={{ margin: \"0.7rem 0.4rem\" }}\r\n                value={metaArtist}\r\n                onChange={onArtistChange}\r\n              />\r\n              <TextField\r\n                label=\"Track\"\r\n                style={{ margin: \"0.7rem 0.4rem\" }}\r\n                value={metaTrack}\r\n                onChange={onTrackChange}\r\n              />\r\n              <TextField\r\n                label=\"Label\"\r\n                style={{ margin: \"0.7rem 0.4rem\" }}\r\n                value={metaLabel}\r\n                onChange={onLabelChange}\r\n              />\r\n              <TextField\r\n                label=\"ISRC\"\r\n                style={{ margin: \"0.7rem 0.4rem\" }}\r\n                value={metaISRC}\r\n                onChange={onISRCChange}\r\n              />\r\n              <TextField\r\n                label=\"Release Date\"\r\n                style={{ margin: \"0.7rem 0.4rem\" }}\r\n                value={metaReleaseDate}\r\n                onChange={onReleaseDateChange}\r\n              />\r\n              <TextField\r\n                label=\"Additional Info\"\r\n                style={{ margin: \"0.7rem 0.4rem\" }}\r\n                value={metaAdditionalInfo}\r\n                onChange={onAdditionalInfoChange}\r\n              />\r\n              <TextField\r\n                label=\"Region\"\r\n                style={{ margin: \"0.7rem 0.4rem\" }}\r\n                value={metaRegion}\r\n                onChange={onRegionChange}\r\n              />\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TrackRow;\r\n","import React from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TrackRow from \"./TrackRow\";\r\nimport { duration } from \"@material-ui/core\";\r\n\r\nconst TrackList = ({ tracks, selectTrack }) => {\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>No</TableCell>\r\n            <TableCell>Start</TableCell>\r\n            <TableCell>End</TableCell>\r\n            <TableCell>Artist</TableCell>\r\n            <TableCell>Track</TableCell>\r\n            <TableCell>Length</TableCell>\r\n            <TableCell>Action</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {tracks\r\n            ? tracks.map((track, index) => {\r\n                return (\r\n                  <TrackRow\r\n                    key={index}\r\n                    {...track}\r\n                    start={track.start}\r\n                    end={track.end}\r\n                    selectTrack={selectTrack}\r\n                  />\r\n                );\r\n              })\r\n            : null}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default TrackList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  AppBar,\r\n  Tabs,\r\n  Tab,\r\n  TextField,\r\n  MenuItem,\r\n  Select,\r\n  Input,\r\n  Box,\r\n  Button,\r\n  Collapse,\r\n} from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { editGlobalMetaData } from \"../actions\";\r\n\r\nconst TabPanel = props => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst a11yProps = index => {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    marginTop: \"1rem\",\r\n  },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\nconst itemList = [\r\n  { text: \"Artist\", type: \"metaTagArtist\" },\r\n  { text: \"Track\", type: \"metaTagTrack\" },\r\n  { text: \"Label\", type: \"metaTagLabel\" },\r\n  { text: \"ISRC\", type: \"metaTagISRC\" },\r\n  { text: \"Release Date\", type: \"metaTagReleaseDate\" },\r\n  { text: \"Additional Info\", type: \"metaTagAdditionalInfo\" },\r\n  { text: \"Region\", type: \"metaTagRegion\" },\r\n];\r\n\r\nconst GlobalMetaDataSection = tracks => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(0);\r\n  const [collapseOpen, setCollapseOpen] = useState(false);\r\n  const [globalMetadataType, setGlobalMetadataType] = useState(\"\");\r\n  const [globalMetadata, setGlobalMetadata] = useState(\"\");\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  const handleAddClick = () => {\r\n    if (globalMetadataType !== \"\" && globalMetadata !== \"\") {\r\n      dispatch(\r\n        editGlobalMetaData({ type: globalMetadataType, value: globalMetadata })\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!collapseOpen) {\r\n      setGlobalMetadataType(\"\");\r\n      setGlobalMetadata(\"\");\r\n    }\r\n  }, [collapseOpen]);\r\n\r\n  useEffect(() => {\r\n    setGlobalMetadata(\"\");\r\n  }, [globalMetadataType]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"Global MetaData\"\r\n        >\r\n          <Tab\r\n            label=\"Global MetaData\"\r\n            {...a11yProps(0)}\r\n            onClick={() => {\r\n              setCollapseOpen(!collapseOpen);\r\n            }}\r\n          />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <Collapse in={collapseOpen} timeout=\"auto\" unmountOnExit>\r\n          <Select\r\n            displayEmpty\r\n            label=\"Metadata Type\"\r\n            value={globalMetadataType}\r\n            onChange={e => {\r\n              setGlobalMetadataType(e.target.value);\r\n            }}\r\n            input={<Input />}\r\n            MenuProps={MenuProps}\r\n            inputProps={{ \"aria-label\": \"Without label\" }}\r\n            style={{ width: \"15rem\", marginTop: \"1.2rem\" }}\r\n          >\r\n            <MenuItem disabled value=\"\">\r\n              <em>Select Global Metadata</em>\r\n            </MenuItem>\r\n            {itemList.map((item, index) => (\r\n              <MenuItem\r\n                key={index}\r\n                value={item.type}\r\n                style={{\r\n                  fontWeight: item.type === globalMetadataType ? \"bold\" : \"\",\r\n                }}\r\n              >\r\n                {item.text}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n          <TextField\r\n            label=\"MetaData\"\r\n            style={{ margin: \"0.2rem 0.4rem\" }}\r\n            value={globalMetadata}\r\n            onChange={e => {\r\n              setGlobalMetadata(e.target.value);\r\n            }}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            onClick={handleAddClick}\r\n          >\r\n            Add\r\n          </Button>\r\n        </Collapse>\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GlobalMetaDataSection;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Table,\r\n  TableContainer,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\n\r\nconst SessionDetail = session => {\r\n  const [sessoinDetail, setSessionDetail] = useState([]);\r\n  useEffect(() => {\r\n    if (session.session) {\r\n      var temp = [];\r\n      Object.keys(session.session).map(row => {\r\n        switch (row) {\r\n          case \"name\":\r\n            temp.push([\"Name\", session.session[\"name\"]]);\r\n            break;\r\n          case \"artist\":\r\n            temp.push([\"Artist\", session.session[\"artist\"]]);\r\n            break;\r\n          case \"venue\":\r\n            temp.push([\"Venue\", session.session[\"venue\"]]);\r\n            break;\r\n          case \"start_time\":\r\n            temp.push([\"Start Time\", session.session[\"start_time\"]]);\r\n            break;\r\n          case \"end_time\":\r\n            temp.push([\"End Time\", session.session[\"end_time\"]]);\r\n            break;\r\n          case \"promoter_name\":\r\n            temp.push([\"Promoter Name\", session.session[\"promoter_name\"]]);\r\n            break;\r\n          case \"length\":\r\n            temp.push([\"Length\", session.session[\"length\"]]);\r\n            break;\r\n        }\r\n      });\r\n      setSessionDetail(temp);\r\n    }\r\n  }, [session]);\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table>\r\n        <TableBody>\r\n          {sessoinDetail.map((row, index) => {\r\n            return (\r\n              <TableRow hover key={index}>\r\n                <TableCell>{row[0]}</TableCell>\r\n                <TableCell>{row[1]}</TableCell>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default SessionDetail;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport AudioWave from \"./AudioWave\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport TrackList from \"./TrackList\";\r\nimport GlobalMetaDataSection from \"./GlobalMetaDataSection\";\r\nimport SessionDetail from \"./SessionDetail\";\r\nimport NavBar from \"./NavBar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst Session = ({\r\n  session,\r\n  selectSession,\r\n  sessionAudioURL,\r\n  tracks,\r\n  selectTrack,\r\n}) => {\r\n  const [tabValue, setTabValue] = useState(0);\r\n\r\n  let { key } = useParams();\r\n\r\n  useEffect(() => {\r\n    selectSession(key);\r\n  }, [selectSession, key]);\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    tabContainer: {\r\n      flexGrow: 1,\r\n      backgroundColor: theme.palette.background.paper,\r\n      marginTop: \"20px\",\r\n    },\r\n    paperClass: {\r\n      marginTop: \"20px\",\r\n      marginBottom: \"20px\",\r\n      padding: \"10px\",\r\n    },\r\n    mt7: {\r\n      marginTop: \"7rem\",\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  const TabPanel = props => {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box p={3}>\r\n            {/*<Typography>{children}</Typography>*/}\r\n            {children}\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const a11yProps = index => {\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      \"aria-controls\": `simple-tabpanel-${index}`,\r\n    };\r\n  };\r\n\r\n  const handleTabValueChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.mt7}>\r\n      <NavBar {...{ session }} />\r\n      <Paper className={classes.paperClass}>\r\n        <h2>{session ? session.name : \"Unknown\"}</h2>\r\n        <h6>SessionID: {session ? session[\"session-key\"] : \"Unknown\"}</h6>\r\n      </Paper>\r\n\r\n      <AudioWave {...{ session, sessionAudioURL, tracks, selectTrack }} />\r\n      <GlobalMetaDataSection tracks={tracks} />\r\n      <div className={classes.tabContainer}>\r\n        <AppBar position=\"static\">\r\n          <Tabs\r\n            value={tabValue}\r\n            onChange={handleTabValueChange}\r\n            aria-label=\"simple tabs example\"\r\n          >\r\n            <Tab label=\"Tracks\" {...a11yProps(0)} />\r\n            <Tab label=\"Session Info\" {...a11yProps(1)} />\r\n          </Tabs>\r\n        </AppBar>\r\n        <TabPanel value={tabValue} index={0}>\r\n          {session && tracks ? (\r\n            <TrackList tracks={tracks} selectTrack={selectTrack} />\r\n          ) : null}\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index={1}>\r\n          <SessionDetail {...{ session }} />\r\n        </TabPanel>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Session;\r\n","import { connect } from 'react-redux';\r\nimport Session from '../components/Session';\r\nimport { selectSession, selectTrack } from '../actions/index';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    session: state.selectedSession,\r\n    sessionAudioURL: state.selectedSessionAudioURL,\r\n    tracks: state.selectedSessionTracks,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    selectTrack: (segment) => {\r\n      dispatch(selectTrack(segment));\r\n    },\r\n    selectSession: (key) => {\r\n      dispatch(selectSession(key));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Session);\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport \"fontsource-roboto\";\r\n\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\n// import Button from 'react-bootstrap/Button';\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nimport SessionListContainer from \"./containers/SessionListContainer\";\r\nimport SessionContainer from \"./containers/SessionContainer\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Container>\r\n        <Row className=\"row\">\r\n          <Col xs={12}>\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <SessionListContainer />\r\n              </Route>\r\n              <Route path=\"/session/:key\">\r\n                <SessionContainer />\r\n              </Route>\r\n            </Switch>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { Enumify } from 'enumify';\r\n\r\nexport class Status extends Enumify {\r\n  static PROCESSING = new Status();\r\n  static ANALYSED = new Status();\r\n  static IN_PROGRESS = new Status();\r\n  static COMPLETE = new Status();\r\n  static _ = this.closeEnum();\r\n}\r\n","import {\r\n  RENDER_SESSIONS,\r\n  SET_SELECTED_SESSION,\r\n  SET_SELECTED_SESSION_AUDIO_URL,\r\n  SELECT_TRACK,\r\n  CREATE_TRACK,\r\n  EDIT_TRACK,\r\n  DELETE_TRACK,\r\n  EDIT_GLOBAL_METADATA,\r\n} from \"../actions\";\r\nimport { Status } from \"../shared/enums\";\r\n\r\nconst initialState = {\r\n  sessions: [],\r\n  selectedSessionStatus: Status.ANALYSED,\r\n  selectedSession: null,\r\n  selectedSessionAudioURL: null,\r\n  selectedSessionTracks: [],\r\n  selectedTrack: null,\r\n};\r\n\r\nconst regionColor = alpha => {\r\n  return (\r\n    \"rgba(\" +\r\n    [\r\n      ~~(Math.random() * 255),\r\n      ~~(Math.random() * 255),\r\n      ~~(Math.random() * 255),\r\n      alpha || 1,\r\n    ] +\r\n    \")\"\r\n  );\r\n};\r\n\r\nexport default function refMakerApp(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_SELECTED_SESSION:\r\n      let selectedSession = state.sessions.find(\r\n        s => s[\"session-key\"] === action.key\r\n      );\r\n\r\n      let selectedSessionTracks = Object.assign([], selectedSession.outputs);\r\n      //console.log(selectedSession.outputs);\r\n      let start = 0;\r\n\r\n      selectedSessionTracks.forEach((track, i, arr) => {\r\n        let thisStart = start;\r\n        let thisEnd = start + track.duration;\r\n        start = thisEnd;\r\n\r\n        arr[i].start = thisStart;\r\n        arr[i].end = thisEnd;\r\n        arr[i][\"resize\"] = false;\r\n        arr[i][\"drag\"] = false;\r\n        arr[i][\"regionColor\"] = regionColor(0.3);\r\n        arr[i][\"editing\"] = false;\r\n        arr[i][\"collapse\"] = false;\r\n        arr[i][\"metaTagArtist\"] = \"\";\r\n        arr[i][\"metaTagRegion\"] = \"\";\r\n        arr[i][\"metaTagTrack\"] = \"\";\r\n        arr[i][\"metaTagLabel\"] = \"\";\r\n        arr[i][\"metaTagISRC\"] = \"\";\r\n        arr[i][\"metaTagReleaseDate\"] = \"\";\r\n        arr[i][\"metaTagAdditionalInfo\"] = \"\";\r\n      });\r\n\r\n      //console.log({ selectedSessionTracks });\r\n\r\n      return {\r\n        ...state,\r\n        selectedSession,\r\n        selectedSessionTracks,\r\n      };\r\n    case SET_SELECTED_SESSION_AUDIO_URL:\r\n      return {\r\n        ...state,\r\n        selectedSessionAudioURL: action.url,\r\n      };\r\n    case RENDER_SESSIONS:\r\n      let sortedSessionsDesc = action.sessions.sort((s1, s2) => {\r\n        if (s1.process_start_time < s2.process_start_time) {\r\n          return 1;\r\n        }\r\n        return -1;\r\n      });\r\n      return {\r\n        ...state,\r\n        sessions: sortedSessionsDesc,\r\n      };\r\n    case SELECT_TRACK:\r\n      let selectedTrack = state.selectedSessionTracks.find(\r\n        t => t.segment === action.segment\r\n      );\r\n      //console.log(\"seleted track\", selectedTrack);\r\n      return {\r\n        ...state,\r\n        selectedTrack,\r\n      };\r\n    case CREATE_TRACK:\r\n      //console.log(\"create\");\r\n      let createdTrack = {\r\n        segment: state.selectedSessionTracks.length + 1,\r\n        start: action.data.start,\r\n        end: action.data.end,\r\n        duration: action.data.duration,\r\n        path: \"\",\r\n        s3_object: \"\",\r\n        audio_file: \"\",\r\n        resize: false,\r\n        drag: false,\r\n        regionColor: regionColor(0.3),\r\n        editing: false,\r\n        collapse: false,\r\n        metaTagArtist: \"\",\r\n        metaTagRegion: \"\",\r\n        metaTagTrack: \"\",\r\n        metaTagLabel: \"\",\r\n        metaTagISRC: \"\",\r\n        metaTagReleaseDate: \"\",\r\n        metaTagAdditionalInfo: \"\",\r\n      };\r\n      //console.log(\"created track\", createdTrack);\r\n      let tempList = [...state.selectedSessionTracks, createdTrack];\r\n      tempList = tempList.sort((a, b) => a.start - b.start);\r\n      tempList.map((row, index) => {\r\n        row.segment = index + 1;\r\n      });\r\n      return {\r\n        ...state,\r\n        selectedSessionTracks: [...tempList],\r\n      };\r\n    case DELETE_TRACK:\r\n      let deleteResult = state.selectedSessionTracks.filter(\r\n        t => t.segment !== action.segment\r\n      );\r\n      deleteResult.map((row, index) => {\r\n        row.segment = index + 1;\r\n      });\r\n      //console.log(`deleted ${action.segment}`);\r\n      return {\r\n        ...state,\r\n        selectedSessionTracks: [...deleteResult],\r\n      };\r\n    case EDIT_TRACK:\r\n      let editedTrack = state.selectedSessionTracks.find(\r\n        t => t.segment === action.segment.segment\r\n      );\r\n      //console.log(\"edited track\", editedTrack);\r\n      return {\r\n        ...state,\r\n        selectedSessionTracks: state.selectedSessionTracks.map(t => {\r\n          return t.segment !== action.segment.segment ? t : editedTrack;\r\n        }),\r\n      };\r\n    case EDIT_GLOBAL_METADATA:\r\n      return {\r\n        ...state,\r\n        selectedSessionTracks: state.selectedSessionTracks.map(t => {\r\n          t[action.payload.type] = action.payload.value;\r\n          return t;\r\n        }),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export const getSessions = (state) => state.sessions;\r\nexport const getSelectedSession = (state) => state.selectedSession;\r\nexport const getSelectedSessionStatus = (state) => state.selectedSessionStatus;\r\n","export const stage = 'test';\r\n\r\nexport const getSessionsURL = (status) =>\r\n  `https://4udw2uaqc6.execute-api.us-east-1.amazonaws.com/${stage}/sessions/status/${status}`;\r\n\r\nexport const getSessionAudioURL = (objectKey) =>\r\n  `https://4udw2uaqc6.execute-api.us-east-1.amazonaws.com/${stage}/session/audio/${encodeURIComponent(\r\n    objectKey\r\n  )}`;\r\n","import { call, put, select, takeLatest } from 'redux-saga/effects';\r\nimport {\r\n  LOAD_SESSIONS,\r\n  RENDER_SESSIONS,\r\n  SELECT_SESSION,\r\n  SET_SELECTED_SESSION,\r\n  SET_SELECTED_SESSION_AUDIO_URL,\r\n} from '../actions';\r\nimport {\r\n  getSessions,\r\n  getSelectedSessionStatus,\r\n  getSelectedSession,\r\n} from './selectors';\r\nimport { getSessionsURL, getSessionAudioURL } from '../shared/endpoints';\r\n\r\nexport function* fetchSessions() {\r\n  let status = yield select(getSelectedSessionStatus);\r\n  const endpoint = getSessionsURL(status.enumKey);\r\n  const response = yield call(fetch, endpoint);\r\n  const data = yield response.json();\r\n  yield put({ type: RENDER_SESSIONS, sessions: data });\r\n}\r\n\r\nexport function* selectSession(action) {\r\n  const sessions = yield select(getSessions);\r\n  if (!sessions || sessions.length === 0) {\r\n    yield call(fetchSessions);\r\n  }\r\n  yield put({ type: SET_SELECTED_SESSION, key: action.key });\r\n  yield call(fetchSessionAudioURL);\r\n}\r\n\r\nexport function* fetchSessionAudioURL() {\r\n  let selectedSession = yield select(getSelectedSession);\r\n  let s3_object = selectedSession.s3_object;\r\n  const endpoint = getSessionAudioURL(s3_object);\r\n  const response = yield call(fetch, endpoint);\r\n  const url = yield response.text();\r\n  yield put({ type: SET_SELECTED_SESSION_AUDIO_URL, url });\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield takeLatest(LOAD_SESSIONS, fetchSessions);\r\n  yield takeLatest(SELECT_SESSION, selectSession);\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport refMakerApp from \"./reducers\";\r\nimport rootSaga from \"./sagas\";\r\nimport { loadSessions } from \"./actions\";\r\nimport { Status } from \"./shared/enums\";\r\n\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(refMakerApp, applyMiddleware(sagaMiddleware));\r\nsagaMiddleware.run(rootSaga);\r\nstore.dispatch(loadSessions(Status.ANALYSED));\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}